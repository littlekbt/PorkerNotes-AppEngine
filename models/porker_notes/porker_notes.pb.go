// Code generated by protoc-gen-go. DO NOT EDIT.
// source: models/porker_notes/porker_notes.proto

/*
Package porker_notes is a generated protocol buffer package.

It is generated from these files:
	models/porker_notes/porker_notes.proto

It has these top-level messages:
	Table
	Hand
	Card
	Action
*/
package porker_notes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Table_Type int32

const (
	Table_unknown    Table_Type = 0
	Table_ring       Table_Type = 1
	Table_tournament Table_Type = 2
)

var Table_Type_name = map[int32]string{
	0: "unknown",
	1: "ring",
	2: "tournament",
}
var Table_Type_value = map[string]int32{
	"unknown":    0,
	"ring":       1,
	"tournament": 2,
}

func (x Table_Type) String() string {
	return proto.EnumName(Table_Type_name, int32(x))
}
func (Table_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Card_Number int32

const (
	Card_NUMBER_UNKNOWN Card_Number = 0
	Card_ONE            Card_Number = 1
	Card_TWO            Card_Number = 2
)

var Card_Number_name = map[int32]string{
	0: "NUMBER_UNKNOWN",
	1: "ONE",
	2: "TWO",
}
var Card_Number_value = map[string]int32{
	"NUMBER_UNKNOWN": 0,
	"ONE":            1,
	"TWO":            2,
}

func (x Card_Number) String() string {
	return proto.EnumName(Card_Number_name, int32(x))
}
func (Card_Number) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Card_Suit int32

const (
	Card_SUIT_UNKNOWN Card_Suit = 0
	Card_HEART        Card_Suit = 1
	Card_DIAMOND      Card_Suit = 2
	Card_SPADE        Card_Suit = 3
	Card_CLUB         Card_Suit = 4
)

var Card_Suit_name = map[int32]string{
	0: "SUIT_UNKNOWN",
	1: "HEART",
	2: "DIAMOND",
	3: "SPADE",
	4: "CLUB",
}
var Card_Suit_value = map[string]int32{
	"SUIT_UNKNOWN": 0,
	"HEART":        1,
	"DIAMOND":      2,
	"SPADE":        3,
	"CLUB":         4,
}

func (x Card_Suit) String() string {
	return proto.EnumName(Card_Suit_name, int32(x))
}
func (Card_Suit) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

type Table struct {
	Name  string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Memo  string     `protobuf:"bytes,2,opt,name=memo" json:"memo,omitempty"`
	Type  Table_Type `protobuf:"varint,3,opt,name=type,enum=porker_notes.Table_Type" json:"type,omitempty"`
	Hands []*Hand    `protobuf:"bytes,4,rep,name=hands" json:"hands,omitempty"`
}

func (m *Table) Reset()                    { *m = Table{} }
func (m *Table) String() string            { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()               {}
func (*Table) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Table) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Table) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Table) GetType() Table_Type {
	if m != nil {
		return m.Type
	}
	return Table_unknown
}

func (m *Table) GetHands() []*Hand {
	if m != nil {
		return m.Hands
	}
	return nil
}

type Hand struct {
	TableId int32     `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	Name    string    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Pos     int32     `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	Tip     float32   `protobuf:"fixed32,4,opt,name=tip" json:"tip,omitempty"`
	Boards  []*Card   `protobuf:"bytes,5,rep,name=boards" json:"boards,omitempty"`
	Hands   []*Card   `protobuf:"bytes,6,rep,name=hands" json:"hands,omitempty"`
	Actions []*Action `protobuf:"bytes,7,rep,name=actions" json:"actions,omitempty"`
}

func (m *Hand) Reset()                    { *m = Hand{} }
func (m *Hand) String() string            { return proto.CompactTextString(m) }
func (*Hand) ProtoMessage()               {}
func (*Hand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Hand) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *Hand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Hand) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *Hand) GetTip() float32 {
	if m != nil {
		return m.Tip
	}
	return 0
}

func (m *Hand) GetBoards() []*Card {
	if m != nil {
		return m.Boards
	}
	return nil
}

func (m *Hand) GetHands() []*Card {
	if m != nil {
		return m.Hands
	}
	return nil
}

func (m *Hand) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

type Card struct {
	Num  Card_Number `protobuf:"varint,1,opt,name=num,enum=porker_notes.Card_Number" json:"num,omitempty"`
	Suit Card_Suit   `protobuf:"varint,2,opt,name=suit,enum=porker_notes.Card_Suit" json:"suit,omitempty"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Card) GetNum() Card_Number {
	if m != nil {
		return m.Num
	}
	return Card_NUMBER_UNKNOWN
}

func (m *Card) GetSuit() Card_Suit {
	if m != nil {
		return m.Suit
	}
	return Card_SUIT_UNKNOWN
}

type Action struct {
	Person string `protobuf:"bytes,1,opt,name=person" json:"person,omitempty"`
	Act    string `protobuf:"bytes,2,opt,name=act" json:"act,omitempty"`
	Tip    int32  `protobuf:"varint,3,opt,name=tip" json:"tip,omitempty"`
}

func (m *Action) Reset()                    { *m = Action{} }
func (m *Action) String() string            { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()               {}
func (*Action) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Action) GetPerson() string {
	if m != nil {
		return m.Person
	}
	return ""
}

func (m *Action) GetAct() string {
	if m != nil {
		return m.Act
	}
	return ""
}

func (m *Action) GetTip() int32 {
	if m != nil {
		return m.Tip
	}
	return 0
}

func init() {
	proto.RegisterType((*Table)(nil), "porker_notes.Table")
	proto.RegisterType((*Hand)(nil), "porker_notes.Hand")
	proto.RegisterType((*Card)(nil), "porker_notes.Card")
	proto.RegisterType((*Action)(nil), "porker_notes.Action")
	proto.RegisterEnum("porker_notes.Table_Type", Table_Type_name, Table_Type_value)
	proto.RegisterEnum("porker_notes.Card_Number", Card_Number_name, Card_Number_value)
	proto.RegisterEnum("porker_notes.Card_Suit", Card_Suit_name, Card_Suit_value)
}

func init() { proto.RegisterFile("models/porker_notes/porker_notes.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x6e, 0x9b, 0x40,
	0x10, 0x86, 0xb3, 0xb0, 0xe0, 0x64, 0x12, 0xa1, 0xd5, 0xa8, 0x6a, 0xc9, 0xcd, 0xe2, 0x50, 0xa1,
	0xa6, 0xa5, 0x92, 0xfb, 0x04, 0x4e, 0x8c, 0x14, 0xab, 0x0d, 0xae, 0xd6, 0x58, 0x39, 0x5a, 0x38,
	0xac, 0x5a, 0x94, 0xb0, 0x8b, 0x60, 0x51, 0x95, 0x17, 0xeb, 0xab, 0xf4, 0xd8, 0x57, 0xa9, 0x76,
	0x21, 0xad, 0xad, 0x26, 0xb7, 0x7f, 0x86, 0x6f, 0x98, 0xf9, 0xf5, 0x2f, 0xbc, 0xad, 0x55, 0x29,
	0x1e, 0xba, 0x8f, 0x8d, 0x6a, 0xef, 0x45, 0xbb, 0x95, 0x4a, 0x8b, 0xc3, 0x22, 0x69, 0x5a, 0xa5,
	0x15, 0x9e, 0xed, 0xf7, 0xa2, 0x9f, 0x04, 0xbc, 0xbc, 0xd8, 0x3d, 0x08, 0x44, 0xa0, 0xb2, 0xa8,
	0x45, 0x48, 0xa6, 0x24, 0x3e, 0xe1, 0x56, 0x9b, 0x5e, 0x2d, 0x6a, 0x15, 0x3a, 0x43, 0xcf, 0x68,
	0x7c, 0x0f, 0x54, 0x3f, 0x36, 0x22, 0x74, 0xa7, 0x24, 0x0e, 0x66, 0x61, 0x72, 0xb0, 0xc2, 0xfe,
	0x2a, 0xc9, 0x1f, 0x1b, 0xc1, 0x2d, 0x85, 0x31, 0x78, 0xdf, 0x0b, 0x59, 0x76, 0x21, 0x9d, 0xba,
	0xf1, 0xe9, 0x0c, 0x0f, 0xf1, 0xeb, 0x42, 0x96, 0x7c, 0x00, 0xa2, 0x0f, 0x40, 0xcd, 0x1c, 0x9e,
	0xc2, 0xa4, 0x97, 0xf7, 0x52, 0xfd, 0x90, 0xec, 0x08, 0x8f, 0x81, 0xb6, 0x95, 0xfc, 0xc6, 0x08,
	0x06, 0x00, 0x5a, 0xf5, 0xad, 0x39, 0x4b, 0x6a, 0xe6, 0x44, 0xbf, 0x09, 0x50, 0x33, 0x8e, 0xe7,
	0x70, 0xac, 0xcd, 0xd6, 0x6d, 0x55, 0xda, 0xdb, 0x3d, 0x3e, 0xb1, 0xf5, 0xb2, 0xfc, 0x6b, 0xc9,
	0xd9, 0xb3, 0xc4, 0xc0, 0x6d, 0x54, 0x67, 0xaf, 0xf7, 0xb8, 0x91, 0xa6, 0xa3, 0xab, 0x26, 0xa4,
	0x53, 0x12, 0x3b, 0xdc, 0x48, 0x7c, 0x07, 0xfe, 0x4e, 0x15, 0x6d, 0xd9, 0x85, 0xde, 0x73, 0x57,
	0x5f, 0x15, 0x6d, 0xc9, 0x47, 0xe2, 0x9f, 0x41, 0xff, 0x45, 0x74, 0x00, 0x30, 0x81, 0x49, 0x71,
	0xa7, 0x2b, 0x25, 0xbb, 0x70, 0x62, 0xd9, 0x57, 0x87, 0xec, 0xdc, 0x7e, 0xe4, 0x4f, 0x50, 0xf4,
	0x8b, 0x00, 0x35, 0xf3, 0x78, 0x01, 0xae, 0xec, 0x6b, 0x6b, 0x2e, 0x98, 0x9d, 0xff, 0xbf, 0x20,
	0xc9, 0xfa, 0x7a, 0x27, 0x5a, 0x6e, 0x28, 0xbc, 0x00, 0xda, 0xf5, 0x95, 0xb6, 0x9e, 0x83, 0xd9,
	0x9b, 0x67, 0xe8, 0x75, 0x5f, 0x69, 0x6e, 0xa1, 0x28, 0x01, 0x7f, 0x98, 0x45, 0x84, 0x20, 0xdb,
	0xdc, 0x5c, 0xa6, 0x7c, 0xbb, 0xc9, 0x3e, 0x67, 0xab, 0xdb, 0x8c, 0x1d, 0xe1, 0x04, 0xdc, 0x55,
	0x96, 0x32, 0x62, 0x44, 0x7e, 0xbb, 0x62, 0x4e, 0x94, 0x02, 0x35, 0xd3, 0xc8, 0xe0, 0x6c, 0xbd,
	0x59, 0xe6, 0x7b, 0xec, 0x09, 0x78, 0xd7, 0xe9, 0x9c, 0xe7, 0x8c, 0x98, 0x00, 0x17, 0xcb, 0xf9,
	0xcd, 0x2a, 0x5b, 0x30, 0xc7, 0xf4, 0xd7, 0x5f, 0xe7, 0x8b, 0x94, 0xb9, 0x26, 0xcb, 0xab, 0x2f,
	0x9b, 0x4b, 0x46, 0xa3, 0x05, 0xf8, 0x83, 0x59, 0x7c, 0x0d, 0x7e, 0x23, 0xda, 0x4e, 0xc9, 0xf1,
	0xd9, 0x8d, 0x95, 0xc9, 0xa4, 0xb8, 0xd3, 0x63, 0x70, 0x46, 0x3e, 0xa5, 0x34, 0xe6, 0xa6, 0xab,
	0x66, 0xe7, 0xdb, 0xf7, 0xfc, 0xe9, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x19, 0x6c, 0xcc,
	0xf9, 0x02, 0x00, 0x00,
}
